{"version":3,"sources":["Componentes/AddCategory.js","helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategorys","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","tittle","className","src","alt","GifGrid","category","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GitExpertApp","categorys","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAGPC,mBAAS,IAHF,mBAGpCC,EAHoC,KAGxBC,EAHwB,KAqB3C,OACI,8BACG,sBAAMC,SAbM,SAACC,GAChBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAa,SAAAS,GAAK,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAQf,SACC,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAtBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX3B,kBAeTM,GAfS,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,OAAOd,EAAS,EAATA,IAGhC,OACI,sBAAKe,UAAU,yBAAf,UACI,qBAAKC,IAAOhB,EAAKiB,IAAKH,IACtB,4BAAIA,QCFHI,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECDf,SAACA,GAAY,IAAD,EACRnC,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHqB,mBAC3BC,EAD2B,KACpBC,EADoB,KAmBlC,OAbCC,qBAAU,WAEN1B,EAAQsB,GACPK,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAACD,IAIEE,EDhBgBK,CAAaP,GAA7Bd,EAF8B,EAE9BA,KAAKe,EAFyB,EAEzBA,QAEZ,OACI,qCACI,6BAAKD,IACJC,GAAW,mBAAGL,UAAU,iBAAb,wBAEd,qBAAKA,UAAU,eAAf,SAOUV,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEpBpBkB,EAAe,WAAM,MAII3C,mBAAS,CAAC,eAJd,mBAIvB4C,EAJuB,KAIZ7C,EAJY,KAY9B,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,aAAcA,IAC3B,uBAEA,6BAEQ6C,EAAUrB,KAAK,SAAAY,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCpB3BU,IAASC,OACJ,cAAC,EAAD,IACHC,SAASC,eAAe,W","file":"static/js/main.89f997e9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n//import PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorys}) => {\r\n\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n   \r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()//evitar comportamiento por defecto del form\r\n      \r\n        if (inputValue.trim().length>2) {\r\n            setCategorys(categ=>[ inputValue,...categ])\r\n            setinputValue('')\r\n        }\r\n        \r\n        //console.log('Submit hecho');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <form onSubmit= {handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value= {inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n    /* AddCategory.propTypes={\r\n        setCategorias: PropTypes.func.isRequired\r\n    } */\r\n}\r\n","\r\n\r\nexport const getGifs = async(categoria)=>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=lzvjyAmtxakRcsf2YOwHA5IJL27NU29D`\r\n        const resp = await fetch (url);  \r\n        const {data} = await resp.json();\r\n       \r\n        \r\n        const gifs = data.map( img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })  \r\n    \r\n       return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({tittle,url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"animate__fadeInDownBig\">\r\n            <img src = {url} alt={tittle}/>\r\n            <p>{tittle}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /* { useEffect, useState } */ from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n      \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className='animate__flash'>Loading...</p>}\r\n            \r\n       {  <div className=\"targeta-grid\">            \r\n                {\r\n                    // data.map(img=>(\r\n                    //     <li key={img.id}>{img.title}</li>\r\n                       \r\n                    // ))\r\n\r\n                    data.map(img=>(\r\n                        <GifGridItem\r\n                        key={img.id} \r\n                        {...img}  />//se envian todas las propiedades del Url es lo mismo q poner img={img}\r\n                    ))\r\n                }\r\n      \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true, \r\n    }) ;\r\n\r\n     useEffect(() => {\r\n         \r\n         getGifs(category)\r\n         .then( imgs=>{\r\n             setstate({\r\n                 data: imgs,\r\n                 loading: false\r\n             });\r\n         })\r\n     }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './Componentes/AddCategory';\r\nimport { GifGrid } from './Componentes/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    //const categorias = ['Chelsea', 'Arsenal', 'Leeds'];\r\n   \r\n    const [categorys, setCategorys] = useState(['Chelsea FC']);\r\n\r\n\r\n\r\n    //  const handleAdd = () =>{\r\n    //     setCategorias(categ =>[ ...categ, \"Fulham\"]); \r\n    //  }\r\n\r\n    return (\r\n        <>\r\n          <h2>GitExpertApp</h2>\r\n          <AddCategory setCategorys={setCategorys}/>\r\n          <hr />  \r\n         \r\n          <ol>\r\n              {\r\n                  categorys.map( category =>(\r\n                      <GifGrid \r\n                      key={category}\r\n                      category={category}/>\r\n                  ))\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n   ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GitExpertApp} from './GitExpertApp'\n\n\nReactDOM.render(\n     <GitExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}